自定义线程池的使用：
    使用有界队列的时候：若有新的任务需要执行的时候，如果线程池实际线程数小于corePoolsize,则优先创建线程，若大于corePoolSize
        则会将任务加入到队列，若队列已满，则在总线程数不大于maximunPoolSize的前提下，创建新的线程，若线程数大于maximunPoolSize
        则会执行拒绝策略，或者其他自定义策略。
     使用无界队列的时候：LinkedBlockingQueue.与有界队列相比，除非系统资源耗尽，否则无界的任务队列不存在任务入队失败的情况。
        当有新的任务到来的时候，系统的线程数小于corePoolSize时候，则会新建线程执行任务，当达到corePoolSize后，就不会继续增加。
        若后续的仍有新的任务加入，而没有空闲的线程资源，则任务直接进入队列进行等待。若任务创建和处理的速度差异很大，无界队列会
        保持快速增长，直到耗尽系统的内存。
     JDK的拒绝策略：
        AbortPolicy:直接抛出异常组织 系统正常工作
        CallerRunsPolicy:只要线程池未关闭，该策略直接在调用者线程中，运行当前被丢弃的任务
        DiscardOldestPolicy:丢弃最老的一个请求，尝试再次提交当前任务
        DiscardPolicy:丢弃无法处理的任务，不给予任何处理。
        如果需要自定义拒绝策略，可以显现RejectedExecutionHandler接口。
